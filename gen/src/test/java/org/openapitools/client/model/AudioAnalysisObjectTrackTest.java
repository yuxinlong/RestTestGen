/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for AudioAnalysisObjectTrack
 */
public class AudioAnalysisObjectTrackTest {
    private final AudioAnalysisObjectTrack model = new AudioAnalysisObjectTrack();

    /**
     * Model tests for AudioAnalysisObjectTrack
     */
    @Test
    public void testAudioAnalysisObjectTrack() {
        // TODO: test AudioAnalysisObjectTrack
    }

    /**
     * Test the property 'analysisChannels'
     */
    @Test
    public void analysisChannelsTest() {
        // TODO: test analysisChannels
    }

    /**
     * Test the property 'analysisSampleRate'
     */
    @Test
    public void analysisSampleRateTest() {
        // TODO: test analysisSampleRate
    }

    /**
     * Test the property 'codeVersion'
     */
    @Test
    public void codeVersionTest() {
        // TODO: test codeVersion
    }

    /**
     * Test the property 'codestring'
     */
    @Test
    public void codestringTest() {
        // TODO: test codestring
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'echoprintVersion'
     */
    @Test
    public void echoprintVersionTest() {
        // TODO: test echoprintVersion
    }

    /**
     * Test the property 'echoprintstring'
     */
    @Test
    public void echoprintstringTest() {
        // TODO: test echoprintstring
    }

    /**
     * Test the property 'endOfFadeIn'
     */
    @Test
    public void endOfFadeInTest() {
        // TODO: test endOfFadeIn
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'keyConfidence'
     */
    @Test
    public void keyConfidenceTest() {
        // TODO: test keyConfidence
    }

    /**
     * Test the property 'loudness'
     */
    @Test
    public void loudnessTest() {
        // TODO: test loudness
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'modeConfidence'
     */
    @Test
    public void modeConfidenceTest() {
        // TODO: test modeConfidence
    }

    /**
     * Test the property 'numSamples'
     */
    @Test
    public void numSamplesTest() {
        // TODO: test numSamples
    }

    /**
     * Test the property 'offsetSeconds'
     */
    @Test
    public void offsetSecondsTest() {
        // TODO: test offsetSeconds
    }

    /**
     * Test the property 'rhythmVersion'
     */
    @Test
    public void rhythmVersionTest() {
        // TODO: test rhythmVersion
    }

    /**
     * Test the property 'rhythmstring'
     */
    @Test
    public void rhythmstringTest() {
        // TODO: test rhythmstring
    }

    /**
     * Test the property 'sampleMd5'
     */
    @Test
    public void sampleMd5Test() {
        // TODO: test sampleMd5
    }

    /**
     * Test the property 'startOfFadeOut'
     */
    @Test
    public void startOfFadeOutTest() {
        // TODO: test startOfFadeOut
    }

    /**
     * Test the property 'synchVersion'
     */
    @Test
    public void synchVersionTest() {
        // TODO: test synchVersion
    }

    /**
     * Test the property 'synchstring'
     */
    @Test
    public void synchstringTest() {
        // TODO: test synchstring
    }

    /**
     * Test the property 'tempo'
     */
    @Test
    public void tempoTest() {
        // TODO: test tempo
    }

    /**
     * Test the property 'tempoConfidence'
     */
    @Test
    public void tempoConfidenceTest() {
        // TODO: test tempoConfidence
    }

    /**
     * Test the property 'timeSignature'
     */
    @Test
    public void timeSignatureTest() {
        // TODO: test timeSignature
    }

    /**
     * Test the property 'timeSignatureConfidence'
     */
    @Test
    public void timeSignatureConfidenceTest() {
        // TODO: test timeSignatureConfidence
    }

    /**
     * Test the property 'windowSeconds'
     */
    @Test
    public void windowSecondsTest() {
        // TODO: test windowSeconds
    }

}
