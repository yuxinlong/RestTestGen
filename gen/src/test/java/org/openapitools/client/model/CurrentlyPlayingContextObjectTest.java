/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ContextObject;
import org.openapitools.client.model.DeviceObject;
import org.openapitools.client.model.DisallowsObject;
import org.openapitools.client.model.OneOfTrackObjectEpisodeObject;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CurrentlyPlayingContextObject
 */
public class CurrentlyPlayingContextObjectTest {
    private final CurrentlyPlayingContextObject model = new CurrentlyPlayingContextObject();

    /**
     * Model tests for CurrentlyPlayingContextObject
     */
    @Test
    public void testCurrentlyPlayingContextObject() {
        // TODO: test CurrentlyPlayingContextObject
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'currentlyPlayingType'
     */
    @Test
    public void currentlyPlayingTypeTest() {
        // TODO: test currentlyPlayingType
    }

    /**
     * Test the property 'device'
     */
    @Test
    public void deviceTest() {
        // TODO: test device
    }

    /**
     * Test the property 'isPlaying'
     */
    @Test
    public void isPlayingTest() {
        // TODO: test isPlaying
    }

    /**
     * Test the property 'item'
     */
    @Test
    public void itemTest() {
        // TODO: test item
    }

    /**
     * Test the property 'progressMs'
     */
    @Test
    public void progressMsTest() {
        // TODO: test progressMs
    }

    /**
     * Test the property 'repeatState'
     */
    @Test
    public void repeatStateTest() {
        // TODO: test repeatState
    }

    /**
     * Test the property 'shuffleState'
     */
    @Test
    public void shuffleStateTest() {
        // TODO: test shuffleState
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

}
