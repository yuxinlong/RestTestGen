/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EpisodeObject;
import org.openapitools.client.model.InlineResponse2008;
import org.openapitools.client.model.InlineResponse401;
import org.openapitools.client.model.PagingSavedEpisodeObject;
import org.openapitools.client.model.PagingSimplifiedEpisodeObject;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EpisodesApi
 */
@Ignore
public class EpisodesApiTest {

    private final EpisodesApi api = new EpisodesApi();

    
    /**
     * Check User&#39;s Saved Episodes 
     *
     * Check if one or more episodes is already saved in the current Spotify user&#39;s &#39;Your Episodes&#39; library. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkUsersSavedEpisodesTest() throws ApiException {
        String ids = null;
        List<Boolean> response = api.checkUsersSavedEpisodes(ids);

        // TODO: test validations
    }
    
    /**
     * Get Show Episodes 
     *
     * Get Spotify catalog information about an showâ€™s episodes. Optional parameters can be used to limit the number of episodes returned. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAShowsEpisodesTest() throws ApiException {
        String id = null;
        String market = null;
        Integer limit = null;
        Integer offset = null;
        PagingSimplifiedEpisodeObject response = api.getAShowsEpisodes(id, market, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Get Episode 
     *
     * Get Spotify catalog information for a single episode identified by its unique Spotify ID. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAnEpisodeTest() throws ApiException {
        String id = null;
        String market = null;
        EpisodeObject response = api.getAnEpisode(id, market);

        // TODO: test validations
    }
    
    /**
     * Get Several Episodes 
     *
     * Get Spotify catalog information for several episodes based on their Spotify IDs. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMultipleEpisodesTest() throws ApiException {
        String ids = null;
        String market = null;
        InlineResponse2008 response = api.getMultipleEpisodes(ids, market);

        // TODO: test validations
    }
    
    /**
     * Get User&#39;s Saved Episodes 
     *
     * Get a list of the episodes saved in the current Spotify user&#39;s library. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersSavedEpisodesTest() throws ApiException {
        String market = null;
        Integer limit = null;
        Integer offset = null;
        PagingSavedEpisodeObject response = api.getUsersSavedEpisodes(market, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Remove User&#39;s Saved Episodes 
     *
     * Remove one or more episodes from the current user&#39;s library. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeEpisodesUserTest() throws ApiException {
        String ids = null;
        Map<String, Object> requestBody = null;
        api.removeEpisodesUser(ids, requestBody);

        // TODO: test validations
    }
    
    /**
     * Save Episodes for Current User 
     *
     * Save one or more episodes to the current user&#39;s library. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveEpisodesUserTest() throws ApiException {
        String ids = null;
        Map<String, Object> requestBody = null;
        api.saveEpisodesUser(ids, requestBody);

        // TODO: test validations
    }
    
}
