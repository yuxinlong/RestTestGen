/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InlineObject;
import org.openapitools.client.model.InlineObject1;
import org.openapitools.client.model.InlineResponse20014;
import org.openapitools.client.model.InlineResponse401;
import org.openapitools.client.model.PagingSavedShowObject;
import org.openapitools.client.model.PagingSimplifiedEpisodeObject;
import org.openapitools.client.model.ShowObject;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShowsApi
 */
@Ignore
public class ShowsApiTest {

    private final ShowsApi api = new ShowsApi();

    
    /**
     * Check User&#39;s Saved Shows 
     *
     * Check if one or more shows is already saved in the current Spotify user&#39;s library. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkUsersSavedShowsTest() throws ApiException {
        String ids = null;
        List<Boolean> response = api.checkUsersSavedShows(ids);

        // TODO: test validations
    }
    
    /**
     * Get Show 
     *
     * Get Spotify catalog information for a single show identified by its unique Spotify ID. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAShowTest() throws ApiException {
        String id = null;
        String market = null;
        ShowObject response = api.getAShow(id, market);

        // TODO: test validations
    }
    
    /**
     * Get Show Episodes 
     *
     * Get Spotify catalog information about an showâ€™s episodes. Optional parameters can be used to limit the number of episodes returned. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAShowsEpisodesTest() throws ApiException {
        String id = null;
        String market = null;
        Integer limit = null;
        Integer offset = null;
        PagingSimplifiedEpisodeObject response = api.getAShowsEpisodes(id, market, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Get Several Shows 
     *
     * Get Spotify catalog information for several shows based on their Spotify IDs. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMultipleShowsTest() throws ApiException {
        String ids = null;
        String market = null;
        InlineResponse20014 response = api.getMultipleShows(ids, market);

        // TODO: test validations
    }
    
    /**
     * Get User&#39;s Saved Shows 
     *
     * Get a list of shows saved in the current Spotify user&#39;s library. Optional parameters can be used to limit the number of shows returned. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersSavedShowsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        PagingSavedShowObject response = api.getUsersSavedShows(limit, offset);

        // TODO: test validations
    }
    
    /**
     * Remove User&#39;s Saved Shows 
     *
     * Delete one or more shows from current Spotify user&#39;s library. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeShowsUserTest() throws ApiException {
        String ids = null;
        String market = null;
        InlineObject1 inlineObject1 = null;
        api.removeShowsUser(ids, market, inlineObject1);

        // TODO: test validations
    }
    
    /**
     * Save Shows for Current User 
     *
     * Save one or more shows to current Spotify user&#39;s library. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveShowsUserTest() throws ApiException {
        String ids = null;
        InlineObject inlineObject = null;
        api.saveShowsUser(ids, inlineObject);

        // TODO: test validations
    }
    
}
