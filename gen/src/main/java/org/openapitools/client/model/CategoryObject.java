/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ImageObject;

/**
 * CategoryObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-06T15:44:39.866286+08:00[Asia/Shanghai]")
public class CategoryObject {
  public static final String SERIALIZED_NAME_HREF = "href";
  @SerializedName(SERIALIZED_NAME_HREF)
  private String href;

  public static final String SERIALIZED_NAME_ICONS = "icons";
  @SerializedName(SERIALIZED_NAME_ICONS)
  private List<ImageObject> icons = new ArrayList<ImageObject>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;


  public CategoryObject href(String href) {
    
    this.href = href;
    return this;
  }

   /**
   * A link to the Web API endpoint returning full details of the category. 
   * @return href
  **/
  @ApiModelProperty(required = true, value = "A link to the Web API endpoint returning full details of the category. ")

  public String getHref() {
    return href;
  }


  public void setHref(String href) {
    this.href = href;
  }


  public CategoryObject icons(List<ImageObject> icons) {
    
    this.icons = icons;
    return this;
  }

  public CategoryObject addIconsItem(ImageObject iconsItem) {
    this.icons.add(iconsItem);
    return this;
  }

   /**
   * The category icon, in various sizes. 
   * @return icons
  **/
  @ApiModelProperty(required = true, value = "The category icon, in various sizes. ")

  public List<ImageObject> getIcons() {
    return icons;
  }


  public void setIcons(List<ImageObject> icons) {
    this.icons = icons;
  }


  public CategoryObject id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The [Spotify category ID](/documentation/web-api/#spotify-uris-and-ids) of the category. 
   * @return id
  **/
  @ApiModelProperty(example = "equal", required = true, value = "The [Spotify category ID](/documentation/web-api/#spotify-uris-and-ids) of the category. ")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CategoryObject name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the category. 
   * @return name
  **/
  @ApiModelProperty(example = "EQUAL", required = true, value = "The name of the category. ")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoryObject categoryObject = (CategoryObject) o;
    return Objects.equals(this.href, categoryObject.href) &&
        Objects.equals(this.icons, categoryObject.icons) &&
        Objects.equals(this.id, categoryObject.id) &&
        Objects.equals(this.name, categoryObject.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, icons, id, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoryObject {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    icons: ").append(toIndentedString(icons)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

