/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ResumePointObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-06T15:44:39.866286+08:00[Asia/Shanghai]")
public class ResumePointObject {
  public static final String SERIALIZED_NAME_FULLY_PLAYED = "fully_played";
  @SerializedName(SERIALIZED_NAME_FULLY_PLAYED)
  private Boolean fullyPlayed;

  public static final String SERIALIZED_NAME_RESUME_POSITION_MS = "resume_position_ms";
  @SerializedName(SERIALIZED_NAME_RESUME_POSITION_MS)
  private Integer resumePositionMs;


  public ResumePointObject fullyPlayed(Boolean fullyPlayed) {
    
    this.fullyPlayed = fullyPlayed;
    return this;
  }

   /**
   * Whether or not the episode has been fully played by the user. 
   * @return fullyPlayed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the episode has been fully played by the user. ")

  public Boolean getFullyPlayed() {
    return fullyPlayed;
  }


  public void setFullyPlayed(Boolean fullyPlayed) {
    this.fullyPlayed = fullyPlayed;
  }


  public ResumePointObject resumePositionMs(Integer resumePositionMs) {
    
    this.resumePositionMs = resumePositionMs;
    return this;
  }

   /**
   * The user&#39;s most recent position in the episode in milliseconds. 
   * @return resumePositionMs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user's most recent position in the episode in milliseconds. ")

  public Integer getResumePositionMs() {
    return resumePositionMs;
  }


  public void setResumePositionMs(Integer resumePositionMs) {
    this.resumePositionMs = resumePositionMs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResumePointObject resumePointObject = (ResumePointObject) o;
    return Objects.equals(this.fullyPlayed, resumePointObject.fullyPlayed) &&
        Objects.equals(this.resumePositionMs, resumePointObject.resumePositionMs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fullyPlayed, resumePositionMs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResumePointObject {\n");
    sb.append("    fullyPlayed: ").append(toIndentedString(fullyPlayed)).append("\n");
    sb.append("    resumePositionMs: ").append(toIndentedString(resumePositionMs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

