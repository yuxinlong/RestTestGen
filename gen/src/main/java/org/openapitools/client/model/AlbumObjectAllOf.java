/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CopyrightObject;
import org.openapitools.client.model.ExternalIdObject;
import org.openapitools.client.model.PagingSimplifiedTrackObject;
import org.openapitools.client.model.SimplifiedArtistObject;

/**
 * AlbumObjectAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-06T15:44:39.866286+08:00[Asia/Shanghai]")
public class AlbumObjectAllOf {
  public static final String SERIALIZED_NAME_ARTISTS = "artists";
  @SerializedName(SERIALIZED_NAME_ARTISTS)
  private List<SimplifiedArtistObject> artists = null;

  public static final String SERIALIZED_NAME_COPYRIGHTS = "copyrights";
  @SerializedName(SERIALIZED_NAME_COPYRIGHTS)
  private List<CopyrightObject> copyrights = null;

  public static final String SERIALIZED_NAME_EXTERNAL_IDS = "external_ids";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_IDS)
  private ExternalIdObject externalIds = null;

  public static final String SERIALIZED_NAME_GENRES = "genres";
  @SerializedName(SERIALIZED_NAME_GENRES)
  private List<String> genres = null;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_POPULARITY = "popularity";
  @SerializedName(SERIALIZED_NAME_POPULARITY)
  private Integer popularity;

  public static final String SERIALIZED_NAME_TRACKS = "tracks";
  @SerializedName(SERIALIZED_NAME_TRACKS)
  private PagingSimplifiedTrackObject tracks = null;


  public AlbumObjectAllOf artists(List<SimplifiedArtistObject> artists) {
    
    this.artists = artists;
    return this;
  }

  public AlbumObjectAllOf addArtistsItem(SimplifiedArtistObject artistsItem) {
    if (this.artists == null) {
      this.artists = new ArrayList<SimplifiedArtistObject>();
    }
    this.artists.add(artistsItem);
    return this;
  }

   /**
   * The artists of the album. Each artist object includes a link in &#x60;href&#x60; to more detailed information about the artist. 
   * @return artists
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist. ")

  public List<SimplifiedArtistObject> getArtists() {
    return artists;
  }


  public void setArtists(List<SimplifiedArtistObject> artists) {
    this.artists = artists;
  }


  public AlbumObjectAllOf copyrights(List<CopyrightObject> copyrights) {
    
    this.copyrights = copyrights;
    return this;
  }

  public AlbumObjectAllOf addCopyrightsItem(CopyrightObject copyrightsItem) {
    if (this.copyrights == null) {
      this.copyrights = new ArrayList<CopyrightObject>();
    }
    this.copyrights.add(copyrightsItem);
    return this;
  }

   /**
   * The copyright statements of the album.
   * @return copyrights
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The copyright statements of the album.")

  public List<CopyrightObject> getCopyrights() {
    return copyrights;
  }


  public void setCopyrights(List<CopyrightObject> copyrights) {
    this.copyrights = copyrights;
  }


  public AlbumObjectAllOf externalIds(ExternalIdObject externalIds) {
    
    this.externalIds = externalIds;
    return this;
  }

   /**
   * Known external IDs for the album. 
   * @return externalIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Known external IDs for the album. ")

  public ExternalIdObject getExternalIds() {
    return externalIds;
  }


  public void setExternalIds(ExternalIdObject externalIds) {
    this.externalIds = externalIds;
  }


  public AlbumObjectAllOf genres(List<String> genres) {
    
    this.genres = genres;
    return this;
  }

  public AlbumObjectAllOf addGenresItem(String genresItem) {
    if (this.genres == null) {
      this.genres = new ArrayList<String>();
    }
    this.genres.add(genresItem);
    return this;
  }

   /**
   * A list of the genres used to classify the album. (If not yet classified, the array is empty.)
   * @return genres
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of the genres used to classify the album. (If not yet classified, the array is empty.)")

  public List<String> getGenres() {
    return genres;
  }


  public void setGenres(List<String> genres) {
    this.genres = genres;
  }


  public AlbumObjectAllOf label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * The label for the album.
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The label for the album.")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public AlbumObjectAllOf popularity(Integer popularity) {
    
    this.popularity = popularity;
    return this;
  }

   /**
   * The popularity of the album, with 100 being the most popular. The popularity is calculated from the popularity of the album&#39;s individual tracks.
   * @return popularity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The popularity of the album, with 100 being the most popular. The popularity is calculated from the popularity of the album's individual tracks.")

  public Integer getPopularity() {
    return popularity;
  }


  public void setPopularity(Integer popularity) {
    this.popularity = popularity;
  }


  public AlbumObjectAllOf tracks(PagingSimplifiedTrackObject tracks) {
    
    this.tracks = tracks;
    return this;
  }

   /**
   * The tracks of the album. 
   * @return tracks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tracks of the album. ")

  public PagingSimplifiedTrackObject getTracks() {
    return tracks;
  }


  public void setTracks(PagingSimplifiedTrackObject tracks) {
    this.tracks = tracks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlbumObjectAllOf albumObjectAllOf = (AlbumObjectAllOf) o;
    return Objects.equals(this.artists, albumObjectAllOf.artists) &&
        Objects.equals(this.copyrights, albumObjectAllOf.copyrights) &&
        Objects.equals(this.externalIds, albumObjectAllOf.externalIds) &&
        Objects.equals(this.genres, albumObjectAllOf.genres) &&
        Objects.equals(this.label, albumObjectAllOf.label) &&
        Objects.equals(this.popularity, albumObjectAllOf.popularity) &&
        Objects.equals(this.tracks, albumObjectAllOf.tracks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artists, copyrights, externalIds, genres, label, popularity, tracks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlbumObjectAllOf {\n");
    sb.append("    artists: ").append(toIndentedString(artists)).append("\n");
    sb.append("    copyrights: ").append(toIndentedString(copyrights)).append("\n");
    sb.append("    externalIds: ").append(toIndentedString(externalIds)).append("\n");
    sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    popularity: ").append(toIndentedString(popularity)).append("\n");
    sb.append("    tracks: ").append(toIndentedString(tracks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

