/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OneOfTrackObjectEpisodeObject;

/**
 * QueueObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-06T15:44:39.866286+08:00[Asia/Shanghai]")
public class QueueObject {
  public static final String SERIALIZED_NAME_CURRENTLY_PLAYING = "currently_playing";
  @SerializedName(SERIALIZED_NAME_CURRENTLY_PLAYING)
  private OneOfTrackObjectEpisodeObject currentlyPlaying = null;

  public static final String SERIALIZED_NAME_QUEUE = "queue";
  @SerializedName(SERIALIZED_NAME_QUEUE)
  private List<OneOfTrackObjectEpisodeObject> queue = null;


  public QueueObject currentlyPlaying(OneOfTrackObjectEpisodeObject currentlyPlaying) {
    
    this.currentlyPlaying = currentlyPlaying;
    return this;
  }

   /**
   * The currently playing track or episode. Can be &#x60;null&#x60;.
   * @return currentlyPlaying
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The currently playing track or episode. Can be `null`.")

  public OneOfTrackObjectEpisodeObject getCurrentlyPlaying() {
    return currentlyPlaying;
  }


  public void setCurrentlyPlaying(OneOfTrackObjectEpisodeObject currentlyPlaying) {
    this.currentlyPlaying = currentlyPlaying;
  }


  public QueueObject queue(List<OneOfTrackObjectEpisodeObject> queue) {
    
    this.queue = queue;
    return this;
  }

  public QueueObject addQueueItem(OneOfTrackObjectEpisodeObject queueItem) {
    if (this.queue == null) {
      this.queue = new ArrayList<OneOfTrackObjectEpisodeObject>();
    }
    this.queue.add(queueItem);
    return this;
  }

   /**
   * The tracks or episodes in the queue. Can be empty.
   * @return queue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tracks or episodes in the queue. Can be empty.")

  public List<OneOfTrackObjectEpisodeObject> getQueue() {
    return queue;
  }


  public void setQueue(List<OneOfTrackObjectEpisodeObject> queue) {
    this.queue = queue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueueObject queueObject = (QueueObject) o;
    return Objects.equals(this.currentlyPlaying, queueObject.currentlyPlaying) &&
        Objects.equals(this.queue, queueObject.queue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentlyPlaying, queue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueueObject {\n");
    sb.append("    currentlyPlaying: ").append(toIndentedString(currentlyPlaying)).append("\n");
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

