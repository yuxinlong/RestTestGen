/*
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeviceObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-06T15:44:39.866286+08:00[Asia/Shanghai]")
public class DeviceObject {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_PRIVATE_SESSION = "is_private_session";
  @SerializedName(SERIALIZED_NAME_IS_PRIVATE_SESSION)
  private Boolean isPrivateSession;

  public static final String SERIALIZED_NAME_IS_RESTRICTED = "is_restricted";
  @SerializedName(SERIALIZED_NAME_IS_RESTRICTED)
  private Boolean isRestricted;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VOLUME_PERCENT = "volume_percent";
  @SerializedName(SERIALIZED_NAME_VOLUME_PERCENT)
  private Integer volumePercent;


  public DeviceObject id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The device ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The device ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public DeviceObject isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * If this device is the currently active device.
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this device is the currently active device.")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public DeviceObject isPrivateSession(Boolean isPrivateSession) {
    
    this.isPrivateSession = isPrivateSession;
    return this;
  }

   /**
   * If this device is currently in a private session.
   * @return isPrivateSession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this device is currently in a private session.")

  public Boolean getIsPrivateSession() {
    return isPrivateSession;
  }


  public void setIsPrivateSession(Boolean isPrivateSession) {
    this.isPrivateSession = isPrivateSession;
  }


  public DeviceObject isRestricted(Boolean isRestricted) {
    
    this.isRestricted = isRestricted;
    return this;
  }

   /**
   * Whether controlling this device is restricted. At present if this is \&quot;true\&quot; then no Web API commands will be accepted by this device.
   * @return isRestricted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether controlling this device is restricted. At present if this is \"true\" then no Web API commands will be accepted by this device.")

  public Boolean getIsRestricted() {
    return isRestricted;
  }


  public void setIsRestricted(Boolean isRestricted) {
    this.isRestricted = isRestricted;
  }


  public DeviceObject name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A human-readable name for the device. Some devices have a name that the user can configure (e.g. \\\&quot;Loudest speaker\\\&quot;) and some devices have a generic name associated with the manufacturer or device model.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Kitchen speaker", value = "A human-readable name for the device. Some devices have a name that the user can configure (e.g. \\\"Loudest speaker\\\") and some devices have a generic name associated with the manufacturer or device model.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DeviceObject type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Device type, such as \&quot;computer\&quot;, \&quot;smartphone\&quot; or \&quot;speaker\&quot;.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "computer", value = "Device type, such as \"computer\", \"smartphone\" or \"speaker\".")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public DeviceObject volumePercent(Integer volumePercent) {
    
    this.volumePercent = volumePercent;
    return this;
  }

   /**
   * The current volume in percent.
   * minimum: 0
   * maximum: 100
   * @return volumePercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "59", value = "The current volume in percent.")

  public Integer getVolumePercent() {
    return volumePercent;
  }


  public void setVolumePercent(Integer volumePercent) {
    this.volumePercent = volumePercent;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceObject deviceObject = (DeviceObject) o;
    return Objects.equals(this.id, deviceObject.id) &&
        Objects.equals(this.isActive, deviceObject.isActive) &&
        Objects.equals(this.isPrivateSession, deviceObject.isPrivateSession) &&
        Objects.equals(this.isRestricted, deviceObject.isRestricted) &&
        Objects.equals(this.name, deviceObject.name) &&
        Objects.equals(this.type, deviceObject.type) &&
        Objects.equals(this.volumePercent, deviceObject.volumePercent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isActive, isPrivateSession, isRestricted, name, type, volumePercent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceObject {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isPrivateSession: ").append(toIndentedString(isPrivateSession)).append("\n");
    sb.append("    isRestricted: ").append(toIndentedString(isRestricted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    volumePercent: ").append(toIndentedString(volumePercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

